{"ast":null,"code":"import axios from 'axios';\n\n// Create an axios instance with default config\nconst api = axios.create({\n  baseURL: 'http:192.168.1.114:8080/api',\n  // This will be proxied through NGINX\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth API calls\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData)\n};\n\n// Todos API calls\nexport const todosAPI = {\n  getAll: () => api.get('/todos'),\n  create: todo => api.post('/todos', todo),\n  update: (id, updates) => api.put(`/todos/${id}`, updates),\n  delete: id => api.delete(`/todos/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","authAPI","login","credentials","post","register","userData","todosAPI","getAll","get","todo","update","id","updates","put","delete"],"sources":["/home/yass/Desktop/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create an axios instance with default config\nconst api = axios.create({\n  baseURL: 'http:192.168.1.114:8080/api', // This will be proxied through NGINX\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if available\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth API calls\nexport const authAPI = {\n  login: (credentials) => api.post('/auth/login', credentials),\n  register: (userData) => api.post('/auth/register', userData),\n};\n\n// Todos API calls\nexport const todosAPI = {\n  getAll: () => api.get('/todos'),\n  create: (todo) => api.post('/todos', todo),\n  update: (id, updates) => api.put(`/todos/${id}`, updates),\n  delete: (id) => api.delete(`/todos/${id}`),\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,6BAA6B;EAAE;EACxCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,OAAO,GAAG;EACrBC,KAAK,EAAGC,WAAW,IAAKd,GAAG,CAACe,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;EAC5DE,QAAQ,EAAGC,QAAQ,IAAKjB,GAAG,CAACe,IAAI,CAAC,gBAAgB,EAAEE,QAAQ;AAC7D,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAG;EACtBC,MAAM,EAAEA,CAAA,KAAMnB,GAAG,CAACoB,GAAG,CAAC,QAAQ,CAAC;EAC/BnB,MAAM,EAAGoB,IAAI,IAAKrB,GAAG,CAACe,IAAI,CAAC,QAAQ,EAAEM,IAAI,CAAC;EAC1CC,MAAM,EAAEA,CAACC,EAAE,EAAEC,OAAO,KAAKxB,GAAG,CAACyB,GAAG,CAAC,UAAUF,EAAE,EAAE,EAAEC,OAAO,CAAC;EACzDE,MAAM,EAAGH,EAAE,IAAKvB,GAAG,CAAC0B,MAAM,CAAC,UAAUH,EAAE,EAAE;AAC3C,CAAC;AAED,eAAevB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}